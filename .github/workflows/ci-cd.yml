name: Terraform & Ansible CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: ap-southeast-2  # Change to your AWS region

jobs:
  deploy:
    name: Terraform & Ansible Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init with Remote State
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=terraform-ansible-demo/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -backend-config="dynamodb_table=${{ secrets.TF_LOCK_TABLE }}" \
            -reconfigure

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Install Ansible
        run: |
          sudo apt update -y
          sudo apt install -y ansible

      - name: Write private key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > devops-key.pem
          chmod 600 devops-key.pem

      - name: Generate dynamic Ansible inventory
        run: |
          echo "[webservers]" > hosts.ini
          EC2_IP=$(terraform output -raw web_public_ip)
          echo "ec2 ansible_host=$EC2_IP ansible_user=ubuntu ansible_ssh_private_key_file=devops-key.pem" >> hosts.ini

      - name: Check connectivity to EC2
        run: ansible -i hosts.ini -m ping webservers

      - name: Run Ansible Playbook
        run: ansible-playbook -i hosts.ini nginx-playbook.yml
